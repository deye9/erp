version: 2
jobs:
  build:
    docker:
      - image: php:7.1.27-apache
      - image: postgres:latest
        environment:
          - POSTGRES_DB: erp
          - POSTGRES_USER: docker_erp_user
          - POSTGRES_PASSWORD: docker_erp_password
    parallelism: 4
    working_directory: /var/www/html #application
    steps:
      - run:
          name: Install System Packages
          command: apt-get update && apt-get install -y git unzip zlib1g-dev libpq-dev
      - checkout
      - run:
          name: Install PHP Extensions
          command: docker-php-ext-configure pgsql -with-pgsql=/usr/local/pgsql && docker-php-ext-install pdo pdo_pgsql zip
      - run:
          name: Install Composer
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php -r "copy('https://composer.github.io/installer.sig', 'composer-setup.sig');"
            php -r "if (hash_file('SHA384', 'composer-setup.php') === trim(file_get_contents('composer-setup.sig'))) { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
            php composer-setup.php --install-dir=bin --filename=composer
            php bin/composer
            php -r "unlink('composer-setup.php');"
      - run:
          name: Install Project Dependencies
          command: php composer.phar install #--ignore-platform-reqs
      # - run:
      #     name: Initialize Database
      #     command: |
      #       php artisan migrate:refresh
      #       php artisan db:seed
      # - run:
      #     name: Run Docker
      #     command: docker-compose up -d
      - run:
          name: Run Tests
          command: vendor/bin/phpunit
workflows:
  version: 2
  workflow:
    jobs:
      - build

asdasd
asd
sad
asd
asd
asd
